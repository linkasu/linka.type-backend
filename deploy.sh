#!/bin/bash

# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./deploy.sh [--force-rebuild] [--skip-tests]

set -e

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
SERVER="linka.su"
REMOTE_USER="aacidov"
REMOTE_DIR="/home/aacidov/linka.type-backend"
DOCKER_IMAGE="bakaidov/linka-type-backend"
TAG="latest"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§–ª–∞–≥–∏
FORCE_REBUILD=false
SKIP_TESTS=false

# –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
while [[ $# -gt 0 ]]; do
    case $1 in
        --force-rebuild)
            FORCE_REBUILD=true
            shift
            ;;
        --skip-tests)
            SKIP_TESTS=true
            shift
            ;;
        *)
            echo "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç: $1"
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [--force-rebuild] [--skip-tests]"
            exit 1
            ;;
    esac
done

echo -e "${BLUE}üöÄ –ù–∞—á–∏–Ω–∞—é –¥–µ–ø–ª–æ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä $SERVER...${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É
echo -e "${YELLOW}üì° –ü—Ä–æ–≤–µ—Ä—è—é –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É...${NC}"
if ! ssh -o ConnectTimeout=10 $REMOTE_USER@$SERVER "echo 'SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç'" >/dev/null 2>&1; then
    echo -e "${RED}‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É $SERVER${NC}"
    exit 1
fi

# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ (–µ—Å–ª–∏ –Ω–µ –ø—Ä–æ–ø—É—â–µ–Ω—ã)
if [ "$SKIP_TESTS" = false ]; then
    echo -e "${YELLOW}üß™ –ó–∞–ø—É—Å–∫–∞—é —Ç–µ—Å—Ç—ã –≤ Docker...${NC}"
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ—Å—Ç–æ–≤
    echo -e "${YELLOW}üóÑÔ∏è –ó–∞–ø—É—Å–∫–∞—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ—Å—Ç–æ–≤...${NC}"
    docker compose up -d db
    
    # –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    echo -e "${YELLOW}‚è≥ –ñ–¥—É –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...${NC}"
    sleep 10
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã –≤ Docker
    if ! docker compose --profile test run --rm go-tests; then
        echo -e "${RED}‚ùå –¢–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏!${NC}"
        exit 1
    fi
    echo -e "${GREEN}‚úÖ –¢–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ${NC}"
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    docker compose down
else
    echo -e "${YELLOW}‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞—é —Ç–µ—Å—Ç—ã${NC}"
fi

# –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞
echo -e "${YELLOW}üî® –°–æ–±–∏—Ä–∞—é Docker –æ–±—Ä–∞–∑...${NC}"
if [ "$FORCE_REBUILD" = true ]; then
    echo -e "${YELLOW}üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞...${NC}"
    docker compose build --no-cache
else
    docker compose build
fi

# –¢–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–∑–∞
echo -e "${YELLOW}üè∑Ô∏è –¢–µ–≥–∏—Ä—É—é –æ–±—Ä–∞–∑ –¥–ª—è Docker Hub...${NC}"
docker tag linka.type-backend:latest $DOCKER_IMAGE:$TAG

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ Docker Hub
echo -e "${YELLOW}üîê –ü—Ä–æ–≤–µ—Ä—è—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –≤ Docker Hub...${NC}"
if ! docker info | grep -q "Username"; then
    echo -e "${RED}‚ùå –ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –≤ Docker Hub. –í—ã–ø–æ–ª–Ω–∏—Ç–µ: docker login${NC}"
    exit 1
fi

# –ó–∞–≥—Ä—É–∑–∫–∞ –≤ Docker Hub
echo -e "${YELLOW}üì§ –ó–∞–≥—Ä—É–∂–∞—é –æ–±—Ä–∞–∑ –≤ Docker Hub...${NC}"
docker push $DOCKER_IMAGE:$TAG
echo -e "${GREEN}‚úÖ –û–±—Ä–∞–∑ –∑–∞–≥—Ä—É–∂–µ–Ω –≤ Docker Hub${NC}"

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
echo -e "${YELLOW}üìã –ö–æ–ø–∏—Ä—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –Ω–∞ —Å–µ—Ä–≤–µ—Ä...${NC}"
scp docker-compose.yml $REMOTE_USER@$SERVER:$REMOTE_DIR/

# –î–µ–ø–ª–æ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä
echo -e "${YELLOW}üîß –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞—é –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ...${NC}"
ssh $REMOTE_USER@$SERVER << 'EOF'
cd ~/linka.type-backend

echo "üîÑ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker compose down

echo "üóëÔ∏è –£–¥–∞–ª—è—é —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–∑—ã..."
docker images | grep linka | awk '{print $3}' | xargs -r docker rmi -f 2>/dev/null || true

echo "üì• –ó–∞–≥—Ä—É–∂–∞—é –Ω–æ–≤—ã–π –æ–±—Ä–∞–∑ –∏–∑ Docker Hub..."
docker pull bakaidov/linka-type-backend:latest

echo "üöÄ –ó–∞–ø—É—Å–∫–∞—é —Å–µ—Ä–≤–∏—Å—ã..."
docker compose up -d

echo "‚è≥ –ñ–¥—É –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 15

echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker ps

echo "üîç –ü—Ä–æ–≤–µ—Ä—è—é Unix —Å–æ–∫–µ—Ç:"
ls -la /var/run/linka-type-backend.sock

echo "üìã –ü—Ä–æ–≤–µ—Ä—è—é –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å:"
if curl -f https://type-backend.linka.su/api/health; then
    echo "‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω"
else
    echo "‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    exit 1
fi

echo "üìã –õ–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞:"
docker compose logs --tail=10 server
EOF

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!${NC}"
    echo -e "${GREEN}üåê –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: https://type-backend.$SERVER${NC}"
    
    # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    echo -e "${YELLOW}üîç –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞...${NC}"
    if curl -f https://type-backend.linka.su/api/health >/dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ${NC}"
    else
        echo -e "${RED}‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
    fi
else
    echo -e "${RED}‚ùå –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π${NC}"
    exit 1
fi

echo -e "${BLUE}üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!${NC}"

