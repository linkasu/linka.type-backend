services:
  db:
    image: postgres:17
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: linkatype

    restart: always

    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    
  playground:
    build:
      context: .
      dockerfile: Dockerfile.playground
    
    ports:
      - 8080:8080
    command: ./main
    depends_on:
      db:
        condition: service_healthy
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=linkatype
    profiles:
      - dev

  server:
    build:
      context: .
      dockerfile: Dockerfile.server
    
    ports:
      - 8081:8080
    depends_on:
      db:
        condition: service_healthy
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=linkatype
      - MAIL_SERVER=${MAIL_SERVER:-smtp.gmail.com}
      - MAIL_PORT=${MAIL_PORT:-587}
      - MAIL_ADRESS=${MAIL_ADRESS:-test@example.com}
      - MAIL_PASSWORD=${MAIL_PASSWORD:-test-password}
      - JWT_SECRET=${JWT_SECRET:-test-secret-key-for-development}
      - JWT_ISSUER=${JWT_ISSUER:-linka-backend}
      - JWT_AUDIENCE=${JWT_AUDIENCE:-linka-users}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  e2e-tests:
    build:
      context: ./e2e-tests
      dockerfile: Dockerfile
    depends_on:
      server:
        condition: service_healthy
    environment:
      - BASE_URL=http://server:8080
      - NODE_ENV=test
      - JEST_TIMEOUT=30000
    volumes:
      - ./test-results:/app/test-results
    profiles:
      - test
    command: ${TEST_COMMAND:-npm run test:docker}

volumes:
  db_data: